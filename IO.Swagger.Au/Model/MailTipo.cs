/* 
 * @project.name@
 *
 * @project.description@
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Au.Client.SwaggerDateConverter;

namespace IO.Swagger.Au.Model
{
    /// <summary>
    /// MailTipo
    /// </summary>
    [DataContract]
    public partial class MailTipo :  IEquatable<MailTipo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MailTipo" /> class.
        /// </summary>
        /// <param name="codiceTipoMail">codiceTipoMail.</param>
        /// <param name="dataMovimentazione">dataMovimentazione.</param>
        /// <param name="descrizioneMail">descrizioneMail.</param>
        /// <param name="indirizzoMail">indirizzoMail.</param>
        /// <param name="uuid">uuid.</param>
        public MailTipo(string codiceTipoMail = default(string), int? dataMovimentazione = default(int?), string descrizioneMail = default(string), string indirizzoMail = default(string), string uuid = default(string))
        {
            this.CodiceTipoMail = codiceTipoMail;
            this.DataMovimentazione = dataMovimentazione;
            this.DescrizioneMail = descrizioneMail;
            this.IndirizzoMail = indirizzoMail;
            this.Uuid = uuid;
        }
        
        /// <summary>
        /// Gets or Sets CodiceTipoMail
        /// </summary>
        [DataMember(Name="codiceTipoMail", EmitDefaultValue=false)]
        public string CodiceTipoMail { get; set; }

        /// <summary>
        /// Gets or Sets DataMovimentazione
        /// </summary>
        [DataMember(Name="dataMovimentazione", EmitDefaultValue=false)]
        public int? DataMovimentazione { get; set; }

        /// <summary>
        /// Gets or Sets DescrizioneMail
        /// </summary>
        [DataMember(Name="descrizioneMail", EmitDefaultValue=false)]
        public string DescrizioneMail { get; set; }

        /// <summary>
        /// Gets or Sets IndirizzoMail
        /// </summary>
        [DataMember(Name="indirizzoMail", EmitDefaultValue=false)]
        public string IndirizzoMail { get; set; }

        /// <summary>
        /// Gets or Sets Uuid
        /// </summary>
        [DataMember(Name="uuid", EmitDefaultValue=false)]
        public string Uuid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MailTipo {\n");
            sb.Append("  CodiceTipoMail: ").Append(CodiceTipoMail).Append("\n");
            sb.Append("  DataMovimentazione: ").Append(DataMovimentazione).Append("\n");
            sb.Append("  DescrizioneMail: ").Append(DescrizioneMail).Append("\n");
            sb.Append("  IndirizzoMail: ").Append(IndirizzoMail).Append("\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MailTipo);
        }

        /// <summary>
        /// Returns true if MailTipo instances are equal
        /// </summary>
        /// <param name="input">Instance of MailTipo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MailTipo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodiceTipoMail == input.CodiceTipoMail ||
                    (this.CodiceTipoMail != null &&
                    this.CodiceTipoMail.Equals(input.CodiceTipoMail))
                ) && 
                (
                    this.DataMovimentazione == input.DataMovimentazione ||
                    (this.DataMovimentazione != null &&
                    this.DataMovimentazione.Equals(input.DataMovimentazione))
                ) && 
                (
                    this.DescrizioneMail == input.DescrizioneMail ||
                    (this.DescrizioneMail != null &&
                    this.DescrizioneMail.Equals(input.DescrizioneMail))
                ) && 
                (
                    this.IndirizzoMail == input.IndirizzoMail ||
                    (this.IndirizzoMail != null &&
                    this.IndirizzoMail.Equals(input.IndirizzoMail))
                ) && 
                (
                    this.Uuid == input.Uuid ||
                    (this.Uuid != null &&
                    this.Uuid.Equals(input.Uuid))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodiceTipoMail != null)
                    hashCode = hashCode * 59 + this.CodiceTipoMail.GetHashCode();
                if (this.DataMovimentazione != null)
                    hashCode = hashCode * 59 + this.DataMovimentazione.GetHashCode();
                if (this.DescrizioneMail != null)
                    hashCode = hashCode * 59 + this.DescrizioneMail.GetHashCode();
                if (this.IndirizzoMail != null)
                    hashCode = hashCode * 59 + this.IndirizzoMail.GetHashCode();
                if (this.Uuid != null)
                    hashCode = hashCode * 59 + this.Uuid.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
