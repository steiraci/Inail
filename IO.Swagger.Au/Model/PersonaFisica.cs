/* 
 * @project.name@
 *
 * @project.description@
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Au.Client.SwaggerDateConverter;

namespace IO.Swagger.Au.Model
{
    /// <summary>
    /// PersonaFisica
    /// </summary>
    [DataContract]
    public partial class PersonaFisica :  IEquatable<PersonaFisica>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PersonaFisica" /> class.
        /// </summary>
        /// <param name="belfioreNazioneNascita">belfioreNazioneNascita.</param>
        /// <param name="codiceFiscale">codiceFiscale.</param>
        /// <param name="cognome">cognome.</param>
        /// <param name="dataNascita">dataNascita.</param>
        /// <param name="dettaglioValidazioneCodiceFiscale">dettaglioValidazioneCodiceFiscale.</param>
        /// <param name="istatComuneNascita">istatComuneNascita.</param>
        /// <param name="nome">nome.</param>
        /// <param name="sesso">sesso.</param>
        /// <param name="uuid">uuid.</param>
        /// <param name="validazioneCodiceFiscale">validazioneCodiceFiscale.</param>
        public PersonaFisica(string belfioreNazioneNascita = default(string), string codiceFiscale = default(string), string cognome = default(string), int? dataNascita = default(int?), string dettaglioValidazioneCodiceFiscale = default(string), string istatComuneNascita = default(string), string nome = default(string), string sesso = default(string), decimal? uuid = default(decimal?), string validazioneCodiceFiscale = default(string))
        {
            this.BelfioreNazioneNascita = belfioreNazioneNascita;
            this.CodiceFiscale = codiceFiscale;
            this.Cognome = cognome;
            this.DataNascita = dataNascita;
            this.DettaglioValidazioneCodiceFiscale = dettaglioValidazioneCodiceFiscale;
            this.IstatComuneNascita = istatComuneNascita;
            this.Nome = nome;
            this.Sesso = sesso;
            this.Uuid = uuid;
            this.ValidazioneCodiceFiscale = validazioneCodiceFiscale;
        }
        
        /// <summary>
        /// Gets or Sets BelfioreNazioneNascita
        /// </summary>
        [DataMember(Name="belfioreNazioneNascita", EmitDefaultValue=false)]
        public string BelfioreNazioneNascita { get; set; }

        /// <summary>
        /// Gets or Sets CodiceFiscale
        /// </summary>
        [DataMember(Name="codiceFiscale", EmitDefaultValue=false)]
        public string CodiceFiscale { get; set; }

        /// <summary>
        /// Gets or Sets Cognome
        /// </summary>
        [DataMember(Name="cognome", EmitDefaultValue=false)]
        public string Cognome { get; set; }

        /// <summary>
        /// Gets or Sets DataNascita
        /// </summary>
        [DataMember(Name="dataNascita", EmitDefaultValue=false)]
        public int? DataNascita { get; set; }

        /// <summary>
        /// Gets or Sets DettaglioValidazioneCodiceFiscale
        /// </summary>
        [DataMember(Name="dettaglioValidazioneCodiceFiscale", EmitDefaultValue=false)]
        public string DettaglioValidazioneCodiceFiscale { get; set; }

        /// <summary>
        /// Gets or Sets IstatComuneNascita
        /// </summary>
        [DataMember(Name="istatComuneNascita", EmitDefaultValue=false)]
        public string IstatComuneNascita { get; set; }

        /// <summary>
        /// Gets or Sets Nome
        /// </summary>
        [DataMember(Name="nome", EmitDefaultValue=false)]
        public string Nome { get; set; }

        /// <summary>
        /// Gets or Sets Sesso
        /// </summary>
        [DataMember(Name="sesso", EmitDefaultValue=false)]
        public string Sesso { get; set; }

        /// <summary>
        /// Gets or Sets Uuid
        /// </summary>
        [DataMember(Name="uuid", EmitDefaultValue=false)]
        public decimal? Uuid { get; set; }

        /// <summary>
        /// Gets or Sets ValidazioneCodiceFiscale
        /// </summary>
        [DataMember(Name="validazioneCodiceFiscale", EmitDefaultValue=false)]
        public string ValidazioneCodiceFiscale { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PersonaFisica {\n");
            sb.Append("  BelfioreNazioneNascita: ").Append(BelfioreNazioneNascita).Append("\n");
            sb.Append("  CodiceFiscale: ").Append(CodiceFiscale).Append("\n");
            sb.Append("  Cognome: ").Append(Cognome).Append("\n");
            sb.Append("  DataNascita: ").Append(DataNascita).Append("\n");
            sb.Append("  DettaglioValidazioneCodiceFiscale: ").Append(DettaglioValidazioneCodiceFiscale).Append("\n");
            sb.Append("  IstatComuneNascita: ").Append(IstatComuneNascita).Append("\n");
            sb.Append("  Nome: ").Append(Nome).Append("\n");
            sb.Append("  Sesso: ").Append(Sesso).Append("\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("  ValidazioneCodiceFiscale: ").Append(ValidazioneCodiceFiscale).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PersonaFisica);
        }

        /// <summary>
        /// Returns true if PersonaFisica instances are equal
        /// </summary>
        /// <param name="input">Instance of PersonaFisica to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PersonaFisica input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.BelfioreNazioneNascita == input.BelfioreNazioneNascita ||
                    (this.BelfioreNazioneNascita != null &&
                    this.BelfioreNazioneNascita.Equals(input.BelfioreNazioneNascita))
                ) && 
                (
                    this.CodiceFiscale == input.CodiceFiscale ||
                    (this.CodiceFiscale != null &&
                    this.CodiceFiscale.Equals(input.CodiceFiscale))
                ) && 
                (
                    this.Cognome == input.Cognome ||
                    (this.Cognome != null &&
                    this.Cognome.Equals(input.Cognome))
                ) && 
                (
                    this.DataNascita == input.DataNascita ||
                    (this.DataNascita != null &&
                    this.DataNascita.Equals(input.DataNascita))
                ) && 
                (
                    this.DettaglioValidazioneCodiceFiscale == input.DettaglioValidazioneCodiceFiscale ||
                    (this.DettaglioValidazioneCodiceFiscale != null &&
                    this.DettaglioValidazioneCodiceFiscale.Equals(input.DettaglioValidazioneCodiceFiscale))
                ) && 
                (
                    this.IstatComuneNascita == input.IstatComuneNascita ||
                    (this.IstatComuneNascita != null &&
                    this.IstatComuneNascita.Equals(input.IstatComuneNascita))
                ) && 
                (
                    this.Nome == input.Nome ||
                    (this.Nome != null &&
                    this.Nome.Equals(input.Nome))
                ) && 
                (
                    this.Sesso == input.Sesso ||
                    (this.Sesso != null &&
                    this.Sesso.Equals(input.Sesso))
                ) && 
                (
                    this.Uuid == input.Uuid ||
                    (this.Uuid != null &&
                    this.Uuid.Equals(input.Uuid))
                ) && 
                (
                    this.ValidazioneCodiceFiscale == input.ValidazioneCodiceFiscale ||
                    (this.ValidazioneCodiceFiscale != null &&
                    this.ValidazioneCodiceFiscale.Equals(input.ValidazioneCodiceFiscale))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BelfioreNazioneNascita != null)
                    hashCode = hashCode * 59 + this.BelfioreNazioneNascita.GetHashCode();
                if (this.CodiceFiscale != null)
                    hashCode = hashCode * 59 + this.CodiceFiscale.GetHashCode();
                if (this.Cognome != null)
                    hashCode = hashCode * 59 + this.Cognome.GetHashCode();
                if (this.DataNascita != null)
                    hashCode = hashCode * 59 + this.DataNascita.GetHashCode();
                if (this.DettaglioValidazioneCodiceFiscale != null)
                    hashCode = hashCode * 59 + this.DettaglioValidazioneCodiceFiscale.GetHashCode();
                if (this.IstatComuneNascita != null)
                    hashCode = hashCode * 59 + this.IstatComuneNascita.GetHashCode();
                if (this.Nome != null)
                    hashCode = hashCode * 59 + this.Nome.GetHashCode();
                if (this.Sesso != null)
                    hashCode = hashCode * 59 + this.Sesso.GetHashCode();
                if (this.Uuid != null)
                    hashCode = hashCode * 59 + this.Uuid.GetHashCode();
                if (this.ValidazioneCodiceFiscale != null)
                    hashCode = hashCode * 59 + this.ValidazioneCodiceFiscale.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
